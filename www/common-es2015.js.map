{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-a6787d69.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4584ab5a.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/app/interfaces/reddit-settings.ts","./src/app/interfaces/unsplash-settings.ts","./src/app/services/loading.service.ts","./src/app/services/reddit.service.ts","./src/app/services/settings.service.ts","./src/app/services/unsplash.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA,mEAAmE,qDAAoB;AACvF,kEAAkE,qDAAsB;AACxF;AACA;AACA,MAAM,6DAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC,MAAM,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;AChCrF;AAAA;AAAO,MAAM,GAAG;IAIZ,YAAY,IAAY;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;IACnB,CAAC;CACJ;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AAEjC,MAAM,UAAW,SAAQ,oDAAG;CAElC;AAEM,MAAM,IAAK,SAAQ,oDAAG;CAE5B;AAEM,MAAM,IAAK,SAAQ,oDAAG;CAE5B;AAEM,MAAM,IAAK,SAAQ,oDAAG;CAE5B;;;;;;;;;;;;;;;;;;;AChB0C;AACQ;IAKtC,cAAc,SAAd,cAAc;IAEzB,YACU,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAC1C,CAAC;IAGC,cAAc;;YAClB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAClD,OAAO,EAAE,gBAAgB;gBACzB,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;YACH,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;YAExB,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,OAAO,CAAC,YAAY,EAAE,CAAC;YACpD,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACtC,CAAC;KAAA;IAGK,OAAO;;YACX,MAAM,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QACzC,CAAC;KAAA;CACF;;YA3BQ,gEAAiB;;AAKb,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAsB1B;AAtB0B;;;;;;;;;;;;;;;;;;;;;ACNuB;AACP;AACL;AACwB;IAajD,aAAa,SAAb,aAAa;IAKzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAD5B,eAAU,GAAgB,EAAE,CAAC;QAEpC,IAAI,CAAC,OAAO,GAAG,0BAA0B,CAAC;QAC1C,IAAI,CAAC,WAAW,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACT,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEhC,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,eAAe,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QAEtF,MAAM,UAAU,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7C,IAAG,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,EAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,IAAI,CAC5D,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE;gBACb,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAC9C,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CACpD,CAAC;gBAEF,KAAK,IAAI,IAAI,IAAI,GAAG,EAAE;oBACrB,MAAM,SAAS,GAAc;wBAC5B,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG;wBACrB,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;qBACxB,CAAC;oBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAChC;gBAED,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,IAAI,CAAC,UAAU,CAAC;gBAChE,IAAK,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAC;oBACjC,OAAO;iBACP;qBAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAC;oBACvC,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBAC1B;qBAAM;oBACN,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;iBAC7B;YAEF,CAAC,CAAC,CACF,CAAC;SACF;aAAM;YACN,OAAO,+CAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;SACjC;IAEF,CAAC;IAED,YAAY;QACX,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACxD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC;IACnB,CAAC;IAED,cAAc;QACb,IAAK,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAC;YACjC,OAAO;SACP;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAC;YACvC,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC1B;aAAM;YACN,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAC1E;IAEF,CAAC;IAED,MAAM,CAAC,GAAQ;QACd,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;IAEpB,CAAC;IAED,WAAW;QACV,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,WAAW;QACV,IAAI,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE;YAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;SACpE;aAAM;YACN,IAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAC,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,EAAC,CAAC;SACnD;IACF,CAAC;IAED,eAAe;QACd,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACtB,CAAC;CACD;;YAxGQ,+DAAU;;AAgBN,aAAa;IAHzB,gEAAU,CAAC;QACX,UAAU,EAAE,MAAM;KAClB,CAAC;GACW,aAAa,CAwFzB;AAxFyB;;;;;;;;;;;;;;;;;;;;AChBiB;AACM;AACI;IAKxC,eAAe,SAAf,eAAe;IAG1B,YACO,aAA4B,EAC5B,eAAgC;QADhC,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAiB;QAEvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACjE,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;YAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACtB;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;QACrE,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;YAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACxB;IACD,CAAC;IAED,UAAU;QACV,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QACpE,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,SAAS,CAAC,IAAa;QACrB,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,WAAW,CAAC,IAAa;QACvB,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7D,CAAC;IAGD,iBAAiB;QAClB,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACnE,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACpC;QAED,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9E,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACtC;QACD,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,EAAC;YAC1B,OAAO,IAAI,CAAC;SACZ;aAAM;YACN,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;YAC3D,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC;SACxB;IAGF,CAAC;CACA;;YA1DQ,6DAAa;YACb,iEAAe;;AAKX,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CAoD3B;AApD2B;;;;;;;;;;;;;;;;;;;;ACPe;AACL;AAOG;IAM5B,eAAe,SAAf,eAAe;IAI1B;QACE,0DAA0D;QAC1D,IAAI,CAAC,OAAO,GAAG,6BAA6B,CAAC;QAC7C,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAED,UAAU;QACR,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAChD,IAAI,eAAe,IAAI,YAAY,EAAE;YACnC,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YACjE,OAAO,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;SAClE;aAAM,IAAI,eAAe,IAAI,MAAM,EAAE;YACpC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrD,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;SAC5D;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,OAAO,GAAG,EAAE,CAAC;QAEjB,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAC;YAC9B,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC5B;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAC;YACxB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACtB;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;QAExD,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,kBAAkB,CAChB,SAAiB,EACjB,QAAgB;QAEhB,IAAI,GAAW,CAAC;QAChB,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;YAC9B,GAAG,GAAG,IAAI,QAAQ,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;SAClF;aAAM;YACL,GAAG,GAAG,IAAI,QAAQ,IAAI,SAAS,EAAE,CAAC;SACnC;QACD,MAAM,SAAS,GAAc;YAC3B,MAAM,EAAE,IAAI,CAAC,OAAO,GAAG,GAAG;YAC1B,MAAM,EAAE,iBAAiB;SAC1B,CAAC;QACF,OAAO,+CAAE,CAAC,SAAS,CAAC,CAAC;IACvB,CAAC;IAEH;;;;;;;;;;;;;UAaM;IAEJ;;;;QAII;IAEJ,aAAa,CAAiB,QAAa;QACzC,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACjD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;QACtD,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC;IAED,OAAO,CAAiB,IAAO,EAAE,QAAa;QAC5C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,IAAa,EAAE,QAAgB;QACnC,IAAI,QAAQ,KAAK,YAAY,EAAE;YAC7B,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC;SACpC;aAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;YAC9B,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;SAC9B;aAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;YAC9B,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;SAC9B;IACH,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IAC7B,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IAC7B,CAAC;IAED,WAAW;QACT,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,WAAW;QACT,IAAI,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAAE;YAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;SACvE;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG;gBACd,WAAW,EAAE,CAAC,IAAI,wEAAU,CAAC,SAAS,CAAC,CAAC;gBACxC,KAAK,EAAE,EAAE;gBACT,KAAK,EAAE,EAAE;aACV,CAAC;SACH;IACH,CAAC;CACF;;AAzHY,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CAyH3B;AAzH2B","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-e806d1f6.js';\nimport { createGesture } from './index-f49d994d.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  if (el.componentOnReady) {\n    await el.componentOnReady();\n  }\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export interface RedditSettings{\n    subs: Sub[];\n    sorting: string;\n    limit: number;\n}\n\nexport class Sub{\n    name: string;\n    on: boolean;\n\n    constructor(name: string){\n        this.name = name;\n        this.on = true;\n    }\n}","import { Sub } from './reddit-settings';\n\nexport class Collection extends Sub{\n\n}\n\nexport class User extends Sub{\n\n}\n\nexport class Term extends Sub{\n\n}\n\nexport class Item extends Sub{\n\n}\n\nexport interface UnsplashSettings{\n    collectionsOn?: boolean;\n    usersOn?: boolean;\n    termsOn?: boolean;\n    collections: Collection[];\n    users: User[];\n    terms: Term[];\n    resolutionOn?: boolean;\n    width?: number;\n    height?: number;\n\n\n    \n    \n    \n}","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  constructor(\n    private loadingController: LoadingController\n  ) { }\n\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: \"Please wait...\",\n      duration: 10000,\n    });\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n    console.log(\"Loading dismissed !!\");\n  }\n\n\n  async dismiss(){\n    await this.loadingController.dismiss();\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { catchError, filter, map, tap } from \"rxjs/operators\";\nimport { RedditSettings, Sub } from '../interfaces/reddit-settings';\n\nimport {\n\tChild,\n\tChildData,\n\tRedditResponse,\n} from \"../interfaces/reddit-response\";\nimport { Wallpaper } from '../interfaces/wallpaper';\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class RedditService {\n\tpublic baseUrl: string;\n\t// public subreddits: Sub[] = [];\n\tpublic settings: RedditSettings;\n\tprivate wallpapers: Wallpaper[] = [];\n\tconstructor(private http: HttpClient) {\n\t\tthis.baseUrl = \"https://www.reddit.com/r\";\n\t\tthis.loadStorage();\n\t}\n\n\tgetPicture(): Observable<Wallpaper> {\n\t\tconst sub = this.getRandomSub();\n        \n\t\tconst str = `/${sub.name}/${this.settings.sorting}.json?limit=${this.settings.limit}`;\n        \n\t\tconst conditions = [\".jpg\", \".png\", \".jpeg\"];\n\t\tif(this.wallpapers.length <= 0){\n\t\t\tconsole.log(\"RedditService -> str\", str);\n\t\t\treturn this.http.get<RedditResponse>(this.baseUrl + str).pipe(\n\t\t\t\tmap((items) => {\n\t\t\t\t\tlet arr = items.data.children.filter((child) =>\n\t\t\t\t\t\tconditions.some((el) => child.data.url.includes(el))\n\t\t\t\t\t);\n\t\n\t\t\t\t\tfor (let item of arr) {\n\t\t\t\t\t\tconst wallpaper: Wallpaper = {\n\t\t\t\t\t\t\torigin: item.data.url,\n\t\t\t\t\t\t\tauthor: item.data.author,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.wallpapers.push(wallpaper);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tconsole.log(\"RedditService -> this.wallpapers\", this.wallpapers)\n\t\t\t\t\tif ( this.wallpapers.length === 0){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (this.wallpapers.length === 1){\n\t\t\t\t\t\treturn this.wallpapers[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.getRandomPaper();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\treturn of(this.getRandomPaper());\n\t\t}\n\t\t\n\t}\n\n\tgetRandomSub(): Sub{\n\t\tconst subs = this.settings.subs.filter(item => item.on);\n\t\tconst rand = Math.floor(Math.random() * subs.length);\n\t\treturn subs[rand];\n\t}\n\n\tgetRandomPaper(): Wallpaper{\n\t\tif ( this.wallpapers.length === 0){\n\t\t\treturn;\n\t\t} else if (this.wallpapers.length === 1){\n\t\t\treturn this.wallpapers[0];\n\t\t} else {\n\t\t\treturn this.wallpapers[Math.floor(Math.random() * this.wallpapers.length)]\n\t\t}\n\t\t\n\t}\n\n\taddSub(sub: Sub){\n\t\tthis.settings.subs.push(sub);\n\t\tthis.saveStorage();\n\t\t\n\t}\n\n\tsaveStorage() {\n\t\tthis.resetWallpapers();\n\t\tlocalStorage.setItem(\"reddit-settings\", JSON.stringify(this.settings));\n\t}\n\n\tloadStorage() {\n\t\tif (localStorage.getItem(\"reddit-settings\")) {\n\t\t\tthis.settings = JSON.parse(localStorage.getItem(\"reddit-settings\"));\n\t\t} else {\n\t\t\tthis.settings = {subs:[], sorting: 'hot', limit:1};\n\t\t}\n\t}\n\n\tresetWallpapers(){\n\t\tthis.wallpapers = [];\n\t}\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { RedditService } from './reddit.service';\nimport { UnsplashService } from './unsplash.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  redditIsOn: boolean;\n\tunsplashIsOn: boolean;\n  constructor(\n\tprivate redditService: RedditService,\n\tprivate unsplashService: UnsplashService,\n  ) {\n\t\tthis.redditIsOn = JSON.parse(localStorage.getItem('redditIsOn'));\n\t\tif (this.redditIsOn === null) {\n\t\t\tthis.redditIsOn = false;\n\t\t\tthis.setReddit(false);\n\t\t}\n    \n\t\tthis.unsplashIsOn = JSON.parse(localStorage.getItem('unsplashIsOn'));\n\t\tif (this.unsplashIsOn === null) {\n\t\t\tthis.unsplashIsOn = false;\n\t\t\tthis.setUnsplash(false);\n\t\t}\n  }\n  \n  setStorage() {\n\t\tlocalStorage.setItem(\"redditIsOn\", JSON.stringify(this.redditIsOn));\n\t\tlocalStorage.setItem(\"unsplashIsOn\", JSON.stringify(this.unsplashIsOn));\n  }\n  \n  setReddit(isOn: boolean){\n    localStorage.setItem(\"redditIsOn\", JSON.stringify(isOn));\n  }\n\n  setUnsplash(isOn: boolean){\n    localStorage.setItem(\"unsplashIsOn\", JSON.stringify(isOn));\n  }\n\n\n  pickRandomService() {\n\tlet serviceArr = [];\n\tif (this.redditIsOn && this.redditService.settings.subs.length > 0) {\n\t\tserviceArr.push(this.redditService);\n\t}\n\n\tif (this.unsplashIsOn && this.unsplashService.settings.collections.length > 0) {\n\t\tserviceArr.push(this.unsplashService);\n\t}\n\tif (serviceArr.length <= 0){\n\t\treturn null;\n\t} else {\n\t\tconst rand = Math.floor(Math.random() * serviceArr.length);\n\t\treturn serviceArr[rand];\n\t}\n\n\n}\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport {\n  Collection,\n  Item,\n  Term,\n  UnsplashSettings,\n  User,\n} from \"../interfaces/unsplash-settings\";\nimport { Wallpaper } from \"../interfaces/wallpaper\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UnsplashService {\n  public baseUrl: string;\n  public settings: UnsplashSettings;\n\n  constructor() {\n    // https://source.unsplash.com/collection/190727/1080x2340\n    this.baseUrl = \"https://source.unsplash.com\";\n    this.loadStorage();\n    console.log(this.settings);\n  }\n\n  getPicture() {\n    const colectionOrUser = this.collectionOrUser();\n    if (colectionOrUser == 'collection') {\n      const collection = this.getRandomItem(this.settings.collections);\n      return this.getRandomWallpaper(collection.name, colectionOrUser);\n    } else if (colectionOrUser == 'user') {\n      const user = this.getRandomItem(this.settings.users);\n      return this.getRandomWallpaper(user.name, colectionOrUser);\n    }\n  }\n\n  collectionOrUser(): string {\n    let options = [];\n\n    if (this.settings.collectionsOn){\n      options.push('collection');\n    }\n    if (this.settings.usersOn){\n      options.push('user');\n    }\n    const rand = Math.floor(Math.random() * options.length);\n\n    return options[rand];\n  }\n\n  getRandomWallpaper(\n    itemValue: string,\n    itemType: string\n  ): Observable<Wallpaper> {\n    let url: string;\n    if (this.settings.resolutionOn) {\n      url = `/${itemType}/${itemValue}/${this.settings.width}x${this.settings.height}`;\n    } else {\n      url = `/${itemType}/${itemValue}`;\n    }\n    const wallpaper: Wallpaper = {\n      origin: this.baseUrl + url,\n      author: \"Unsplash Source\",\n    };\n    return of(wallpaper);\n  }\n\n/*   getRandomFromCollection(collectionId: string): Observable<Wallpaper> {\n    let url: string;\n    if (this.settings.resolutionOn) {\n      url = `/collection/${collectionId}/${this.settings.width}x${this.settings.height}`;\n    } else {\n      url = `/collection/${collectionId}`;\n    }\n\n    const wallpaper: Wallpaper = {\n      origin: this.baseUrl + url,\n      author: \"Unsplash Source\",\n    };\n    return of(wallpaper);\n  } */\n\n  /*   getRandomCollection(){\n    const collections = this.settings.collections.filter(item => item.on);\n\t\tconst rand = Math.floor(Math.random() * collections.length);\n\t\treturn collections[rand];\n  } */\n\n  getRandomItem<T extends Item>(itemList: T[]): T {\n    const items = itemList.filter((item) => item.on);\n    const rand = Math.floor(Math.random() * items.length);\n    return items[rand];\n  }\n\n  addItem<T extends Item>(item: T, itemList: T[]) {\n    itemList.push(item);\n  }\n\n  setOn(isOn: boolean, itemName: string) {\n    if (itemName === \"collection\") {\n      this.settings.collectionsOn = isOn;\n    } else if (itemName === \"user\") {\n      this.settings.usersOn = isOn;\n    } else if (itemName === \"term\") {\n      this.settings.termsOn = isOn;\n    }\n  }\n\n  getCollections(): Collection[] {\n    return this.settings.collections;\n  }\n\n  getUsers(): User[] {\n    return this.settings.users;\n  }\n\n  getTerms(): Term[] {\n    return this.settings.terms;\n  }\n\n  saveStorage() {\n    localStorage.setItem(\"unsplash-settings\", JSON.stringify(this.settings));\n  }\n\n  loadStorage() {\n    if (localStorage.getItem(\"unsplash-settings\")) {\n      this.settings = JSON.parse(localStorage.getItem(\"unsplash-settings\"));\n    } else {\n      this.settings = {\n        collections: [new Collection(\"1111702\")],\n        users: [],\n        terms: [],\n      };\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}