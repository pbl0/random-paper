{"version":3,"sources":["webpack:///src/app/components/item-list/item-list.component.html","webpack:///src/app/unsplash-settings/unsplash-settings.page.html","webpack:///src/app/components/item-list/item-list.component.scss","webpack:///src/app/components/item-list/item-list.component.ts","webpack:///src/app/unsplash-settings/unsplash-settings-routing.module.ts","webpack:///src/app/unsplash-settings/unsplash-settings.module.ts","webpack:///src/app/unsplash-settings/unsplash-settings.page.scss","webpack:///src/app/unsplash-settings/unsplash-settings.page.ts"],"names":["ItemListComponent","unsplashService","item","name","on","pendientes","itemList","filter","itemData","length","saveStorage","newItem","addItem","setOn","isOn","itemName","i","splice","selector","template","routes","path","component","UnsplashSettingsPageRoutingModule","imports","forChild","exports","UnsplashSettingsPageModule","declarations","UnsplashSettingsPage","platform","settings","collection","getCollections","getUsers","getTerms"],"mappings":"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","file":"unsplash-settings-unsplash-settings-module-es5.js","sourcesContent":["export default \"<ion-list>\\n  <ion-list-header>\\n    <ion-label>\\n       {{itemName + 's' |titlecase}}\\n    </ion-label>\\n    <ion-toggle\\n        (ionChange)=\\\"changeToggle()\\\"\\n        [(ngModel)]=\\\"isOn\\\"\\n    ></ion-toggle>\\n   \\n  </ion-list-header>\\n  <ion-item *ngIf=\\\"isOn\\\">\\n    <ion-label position=\\\"floating\\\">Add {{itemName}}</ion-label>\\n    <ion-input\\n      (keyup.enter)=\\\"addItem()\\\"\\n      [(ngModel)]=\\\"item.name\\\"\\n      type=\\\"text\\\"\\n    ></ion-input>\\n  </ion-item>\\n</ion-list>\\n<ion-list *ngIf=\\\"itemList.length && isOn\\\">\\n  <ion-item-sliding\\n    class=\\\"animate__animated animate__fadeInDown animate__fast\\\"\\n    *ngFor=\\\"let item of itemList; let i = index\\\"\\n  >\\n    <ion-item>\\n      <ion-checkbox\\n        (ionChange)=\\\"changeCheck(item)\\\"\\n        [(ngModel)]=\\\"item.on\\\"\\n        slot=\\\"start\\\"\\n      ></ion-checkbox>\\n      <ion-label> {{item.name}} </ion-label>\\n    </ion-item>\\n\\n    <ion-item-options side=\\\"end\\\">\\n      <ion-item-option (click)=\\\"delete(i)\\\" color=\\\"danger\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n      </ion-item-option>\\n    </ion-item-options>\\n  </ion-item-sliding>\\n</ion-list>\\n\";","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title> Unsplash Settings </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"animate__animated animate__fadeInLeft animate__faster\\\">\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Resolution</ion-label>\\n      <ion-toggle\\n        (ionChange)=\\\"change()\\\"\\n        [(ngModel)]=\\\"settings.resolutionOn\\\"\\n      ></ion-toggle>\\n    </ion-list-header>\\n\\n    <!-- <ion-item (click)=\\\"detectResolution()\\\">\\n      <ion-label> Auto-detect resolution </ion-label>\\n    </ion-item> -->\\n    <ion-item-group *ngIf=\\\"settings.resolutionOn\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Height</ion-label>\\n        <ion-input\\n          [(ngModel)]=\\\"settings.height\\\"\\n          (ionChange)=\\\"change()\\\"\\n          type=\\\"number\\\"\\n        ></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Width</ion-label>\\n        <ion-input\\n          [(ngModel)]=\\\"settings.width\\\"\\n          (ionChange)=\\\"change()\\\"\\n          type=\\\"number\\\"\\n        ></ion-input>\\n      </ion-item>\\n    </ion-item-group>\\n\\n    <ion-item-divider></ion-item-divider>\\n  </ion-list>\\n\\n  <app-item-list\\n    [itemName]=\\\"'collection'\\\"\\n    [itemList]=\\\"getCollections()\\\"\\n    [isOn]=\\\"settings.collectionsOn\\\"\\n  ></app-item-list>\\n  <app-item-list\\n    [itemName]=\\\"'user'\\\"\\n    [itemList]=\\\"getUsers()\\\"\\n    [isOn]=\\\"settings.usersOn\\\"\\n  ></app-item-list>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaXRlbS1saXN0L2l0ZW0tbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { Collection, Item, Term, UnsplashSettings, User } from 'src/app/interfaces/unsplash-settings';\nimport { UnsplashService } from 'src/app/services/unsplash.service';\n\n@Component({\n  selector: 'app-item-list',\n  templateUrl: './item-list.component.html',\n  styleUrls: ['./item-list.component.scss'],\n})\nexport class ItemListComponent implements OnInit {\n  @Input() itemName: string;\n  item: Item;\n  @Input() itemList: Item[];\n  @Input() isOn: boolean;\n  constructor(private unsplashService: UnsplashService) { \n    this.item = { name: \"\", on: true };\n  }\n\n  ngOnInit() {}\n\n  changeCheck() {\n\t\t// console.log(item);\n\t\tconst pendientes = this.itemList.filter(\n\t\t\t(itemData) => !itemData.on\n\t\t).length;\n\t\tif (pendientes === 0) {\n\t\t\tthis.item.on = true;\n\t\t} else {\n\t\t\tthis.item.on = false;\n\t\t}\n\n\t\tthis.unsplashService.saveStorage();\n  }\n  \n  addItem() {\n\t\tif (this.item.name.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = new Item(this.item.name);\n\t\tthis.unsplashService.addItem(newItem, this.itemList);\n\n\t\tthis.item.name = \"\";\n\t\tthis.unsplashService.saveStorage();\n  }\n\n  changeToggle(){\n    // console.log(this.isOn);\n    this.unsplashService.setOn(this.isOn, this.itemName);\n\t\tthis.unsplashService.saveStorage();\n\t}\n  \n  delete(i: number) {\n\t\tthis.itemList.splice(i, 1);\n\t\tthis.unsplashService.saveStorage();\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UnsplashSettingsPage } from './unsplash-settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UnsplashSettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UnsplashSettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UnsplashSettingsPageRoutingModule } from './unsplash-settings-routing.module';\n\nimport { UnsplashSettingsPage } from './unsplash-settings.page';\nimport { ItemListComponent } from '../components/item-list/item-list.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UnsplashSettingsPageRoutingModule\n  ],\n  declarations: [UnsplashSettingsPage, ItemListComponent]\n})\nexport class UnsplashSettingsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Vuc3BsYXNoLXNldHRpbmdzL3Vuc3BsYXNoLXNldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from \"@angular/core\";\nimport { Collection, UnsplashSettings } from \"../interfaces/unsplash-settings\";\nimport { UnsplashService } from \"../services/unsplash.service\";\n\n\nimport { Platform } from '@ionic/angular';\n\n@Component({\n\tselector: \"app-unsplash-settings\",\n\ttemplateUrl: \"./unsplash-settings.page.html\",\n\tstyleUrls: [\"./unsplash-settings.page.scss\"],\n})\nexport class UnsplashSettingsPage implements OnInit {\n\tcollection: Collection;\n\tsettings: UnsplashSettings;\n\tconstructor(private unsplashService: UnsplashService,\n\t\tprivate platform: Platform) {\n\t\tthis.settings = unsplashService.settings;\n\t\tthis.collection = { name: \"\", on: true };\n\t}\n\n\tngOnInit() {}\n\n\tchange(){\n\t\t\n\t\tthis.unsplashService.saveStorage();\n\t}\n\n\tgetCollections(){\n\t\treturn this.unsplashService.getCollections();\n\t}\n\tgetUsers(){\n\t\treturn this.unsplashService.getUsers();\n\t}\n\tgetTerms(){\n\t\treturn this.unsplashService.getTerms();\n\t}\n\n\n/* \tdetectResolution(){\n\t\tthis.settings.height = this.platform.height();\n\t\tthis.settings.width = this.platform.width();\n\t} */\n}\n"]}