{"version":3,"sources":["./src/app/components/item-list/item-list.component.html","./src/app/unsplash-settings/unsplash-settings.page.html","./src/app/components/item-list/item-list.component.scss","./src/app/components/item-list/item-list.component.ts","./src/app/unsplash-settings/unsplash-settings-routing.module.ts","./src/app/unsplash-settings/unsplash-settings.module.ts","./src/app/unsplash-settings/unsplash-settings.page.scss","./src/app/unsplash-settings/unsplash-settings.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,2HAA4D,2BAA2B,kOAAkO,UAAU,8UAA8U,4MAA4M,WAAW,gSAAgS,E;;;;;;;;;;;;ACAvpC;AAAe,8oDAA+kD,E;;;;;;;;;;;;ACA9lD;AAAe,6GAA8C,mKAAmK,E;;;;;;;;;;;;;;;;;;;ACAvK;AAC6C;AAClC;IAOvD,iBAAiB,SAAjB,iBAAiB;IAK5B,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAClD,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC;IACrC,CAAC;IAED,QAAQ,KAAI,CAAC;IAEb,WAAW;QACX,qBAAqB;QACrB,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACtC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAC1B,CAAC,MAAM,CAAC;QACT,IAAI,UAAU,KAAK,CAAC,EAAE;YACrB,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;SACpB;aAAM;YACN,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;SACrB;QAED,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IAED,OAAO;QACP,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAChC,OAAO;SACP;QACD,MAAM,OAAO,GAAG,IAAI,yEAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAErD,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IAED,YAAY;QACV,0BAA0B;QAC1B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvD,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACpC,CAAC;IAEA,MAAM,CAAC,CAAS;QAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACpC,CAAC;CAED;;YAtDQ,iFAAe;;;uBAQrB,mDAAK;uBAEL,mDAAK;mBACL,mDAAK;;AAJK,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,kPAAyC;;KAE1C,CAAC;GACW,iBAAiB,CA+C7B;AA/C6B;;;;;;;;;;;;;;;;;;;;ACTW;AACc;AAES;AAEhE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4EAAoB;KAChC;CACF,CAAC;IAMW,iCAAiC,SAAjC,iCAAiC;CAAG;AAApC,iCAAiC;IAJ7C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,iCAAiC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBL;AACM;AACF;AAEA;AAE0C;AAEvB;AACgB;IAanE,0BAA0B,SAA1B,0BAA0B;CAAG;AAA7B,0BAA0B;IATtC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,mGAAiC;SAClC;QACD,YAAY,EAAE,CAAC,4EAAoB,EAAE,2FAAiB,CAAC;KACxD,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;ACtBvC;AAAe,6GAA8C,mKAAmK,E;;;;;;;;;;;;;;;;;;;ACA9K;AAEa;AAGrB;IAO7B,oBAAoB,SAApB,oBAAoB;IAGhC,YAAoB,eAAgC,EAC3C,QAAkB;QADP,oBAAe,GAAf,eAAe,CAAiB;QAC3C,aAAQ,GAAR,QAAQ,CAAU;QAC1B,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,QAAQ,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC;IAC1C,CAAC;IAED,QAAQ,KAAI,CAAC;IAEb,MAAM;QAEL,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACpC,CAAC;IAED,cAAc;QACb,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;IAC9C,CAAC;IACD,QAAQ;QACP,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IACxC,CAAC;IACD,QAAQ;QACP,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IACxC,CAAC;CAOD;;YAzCQ,0EAAe;YAGf,uDAAQ;;AAOJ,oBAAoB;IALhC,+DAAS,CAAC;QACV,QAAQ,EAAE,uBAAuB;QACjC,qPAA4C;;KAE5C,CAAC;GACW,oBAAoB,CA+BhC;AA/BgC","file":"unsplash-settings-unsplash-settings-module-es2015.js","sourcesContent":["export default \"<ion-list>\\n  <ion-list-header>\\n    <ion-label>\\n       {{itemName + 's' |titlecase}}\\n    </ion-label>\\n    <ion-toggle\\n        (ionChange)=\\\"changeToggle()\\\"\\n        [(ngModel)]=\\\"isOn\\\"\\n    ></ion-toggle>\\n   \\n  </ion-list-header>\\n  <ion-item *ngIf=\\\"isOn\\\">\\n    <ion-label position=\\\"floating\\\">Add {{itemName}}</ion-label>\\n    <ion-input\\n      (keyup.enter)=\\\"addItem()\\\"\\n      [(ngModel)]=\\\"item.name\\\"\\n      type=\\\"text\\\"\\n    ></ion-input>\\n  </ion-item>\\n</ion-list>\\n<ion-list *ngIf=\\\"itemList.length && isOn\\\">\\n  <ion-item-sliding\\n    class=\\\"animate__animated animate__fadeInDown animate__fast\\\"\\n    *ngFor=\\\"let item of itemList; let i = index\\\"\\n  >\\n    <ion-item>\\n      <ion-checkbox\\n        (ionChange)=\\\"changeCheck(item)\\\"\\n        [(ngModel)]=\\\"item.on\\\"\\n        slot=\\\"start\\\"\\n      ></ion-checkbox>\\n      <ion-label> {{item.name}} </ion-label>\\n    </ion-item>\\n\\n    <ion-item-options side=\\\"end\\\">\\n      <ion-item-option (click)=\\\"delete(i)\\\" color=\\\"danger\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n      </ion-item-option>\\n    </ion-item-options>\\n  </ion-item-sliding>\\n</ion-list>\\n\";","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title> Unsplash Settings </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"animate__animated animate__fadeInLeft animate__faster\\\">\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Resolution</ion-label>\\n      <ion-toggle\\n        (ionChange)=\\\"change()\\\"\\n        [(ngModel)]=\\\"settings.resolutionOn\\\"\\n      ></ion-toggle>\\n    </ion-list-header>\\n\\n    <!-- <ion-item (click)=\\\"detectResolution()\\\">\\n      <ion-label> Auto-detect resolution </ion-label>\\n    </ion-item> -->\\n    <ion-item-group *ngIf=\\\"settings.resolutionOn\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Height</ion-label>\\n        <ion-input\\n          [(ngModel)]=\\\"settings.height\\\"\\n          (ionChange)=\\\"change()\\\"\\n          type=\\\"number\\\"\\n        ></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Width</ion-label>\\n        <ion-input\\n          [(ngModel)]=\\\"settings.width\\\"\\n          (ionChange)=\\\"change()\\\"\\n          type=\\\"number\\\"\\n        ></ion-input>\\n      </ion-item>\\n    </ion-item-group>\\n\\n    <ion-item-divider></ion-item-divider>\\n  </ion-list>\\n\\n  <app-item-list\\n    [itemName]=\\\"'collection'\\\"\\n    [itemList]=\\\"getCollections()\\\"\\n    [isOn]=\\\"settings.collectionsOn\\\"\\n  ></app-item-list>\\n  <app-item-list\\n    [itemName]=\\\"'user'\\\"\\n    [itemList]=\\\"getUsers()\\\"\\n    [isOn]=\\\"settings.usersOn\\\"\\n  ></app-item-list>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaXRlbS1saXN0L2l0ZW0tbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { Collection, Item, Term, UnsplashSettings, User } from 'src/app/interfaces/unsplash-settings';\nimport { UnsplashService } from 'src/app/services/unsplash.service';\n\n@Component({\n  selector: 'app-item-list',\n  templateUrl: './item-list.component.html',\n  styleUrls: ['./item-list.component.scss'],\n})\nexport class ItemListComponent implements OnInit {\n  @Input() itemName: string;\n  item: Item;\n  @Input() itemList: Item[];\n  @Input() isOn: boolean;\n  constructor(private unsplashService: UnsplashService) { \n    this.item = { name: \"\", on: true };\n  }\n\n  ngOnInit() {}\n\n  changeCheck() {\n\t\t// console.log(item);\n\t\tconst pendientes = this.itemList.filter(\n\t\t\t(itemData) => !itemData.on\n\t\t).length;\n\t\tif (pendientes === 0) {\n\t\t\tthis.item.on = true;\n\t\t} else {\n\t\t\tthis.item.on = false;\n\t\t}\n\n\t\tthis.unsplashService.saveStorage();\n  }\n  \n  addItem() {\n\t\tif (this.item.name.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = new Item(this.item.name);\n\t\tthis.unsplashService.addItem(newItem, this.itemList);\n\n\t\tthis.item.name = \"\";\n\t\tthis.unsplashService.saveStorage();\n  }\n\n  changeToggle(){\n    // console.log(this.isOn);\n    this.unsplashService.setOn(this.isOn, this.itemName);\n\t\tthis.unsplashService.saveStorage();\n\t}\n  \n  delete(i: number) {\n\t\tthis.itemList.splice(i, 1);\n\t\tthis.unsplashService.saveStorage();\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UnsplashSettingsPage } from './unsplash-settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UnsplashSettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UnsplashSettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UnsplashSettingsPageRoutingModule } from './unsplash-settings-routing.module';\n\nimport { UnsplashSettingsPage } from './unsplash-settings.page';\nimport { ItemListComponent } from '../components/item-list/item-list.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UnsplashSettingsPageRoutingModule\n  ],\n  declarations: [UnsplashSettingsPage, ItemListComponent]\n})\nexport class UnsplashSettingsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Vuc3BsYXNoLXNldHRpbmdzL3Vuc3BsYXNoLXNldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from \"@angular/core\";\nimport { Collection, UnsplashSettings } from \"../interfaces/unsplash-settings\";\nimport { UnsplashService } from \"../services/unsplash.service\";\n\n\nimport { Platform } from '@ionic/angular';\n\n@Component({\n\tselector: \"app-unsplash-settings\",\n\ttemplateUrl: \"./unsplash-settings.page.html\",\n\tstyleUrls: [\"./unsplash-settings.page.scss\"],\n})\nexport class UnsplashSettingsPage implements OnInit {\n\tcollection: Collection;\n\tsettings: UnsplashSettings;\n\tconstructor(private unsplashService: UnsplashService,\n\t\tprivate platform: Platform) {\n\t\tthis.settings = unsplashService.settings;\n\t\tthis.collection = { name: \"\", on: true };\n\t}\n\n\tngOnInit() {}\n\n\tchange(){\n\t\t\n\t\tthis.unsplashService.saveStorage();\n\t}\n\n\tgetCollections(){\n\t\treturn this.unsplashService.getCollections();\n\t}\n\tgetUsers(){\n\t\treturn this.unsplashService.getUsers();\n\t}\n\tgetTerms(){\n\t\treturn this.unsplashService.getTerms();\n\t}\n\n\n/* \tdetectResolution(){\n\t\tthis.settings.height = this.platform.height();\n\t\tthis.settings.width = this.platform.width();\n\t} */\n}\n"],"sourceRoot":"webpack:///"}