{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/button-active-a6787d69.js","webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-4584ab5a.js","webpack:///node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","webpack:///node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","webpack:///src/app/interfaces/reddit-settings.ts","webpack:///src/app/interfaces/unsplash-settings.ts","webpack:///src/app/services/loading.service.ts","webpack:///src/app/services/reddit.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/services/unsplash.service.ts"],"names":["createButtonActiveGesture","el","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","document","target","elementFromPoint","clearActiveButton","setActiveButton","button","buttonToModify","classList","add","dispatchClick","remove","click","undefined","gestureName","threshold","onStart","ev","currentX","currentY","onMove","onEnd","attachComponent","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","ownerDocument","createElement","forEach","c","Object","assign","appendChild","componentOnReady","detachComponent","element","parentElement","removeViewFromDom","Promise","resolve","HapticEngine","getEngine","win","window","TapticEngine","Capacitor","isPluginAvailable","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","style","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact","spinners","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","sin","cos","step","elmDuration","cx","cy","fill","viewBox","transform","_","lines","y1","y2","SPINNERS","hostContext","selector","closest","createColorClasses","color","cssClassMap","length","getClassList","classes","array","Array","isArray","split","filter","map","trim","getClassMap","SCHEME","openURL","url","direction","animation","test","router","querySelector","preventDefault","push","Sub","name","on","Collection","User","Term","Item","LoadingService","loadingController","create","message","duration","loading","present","onDidDismiss","role","data","console","log","dismiss","providedIn","RedditService","http","wallpapers","baseUrl","loadStorage","sub","getRandomSub","str","settings","sorting","limit","conditions","get","pipe","items","arr","children","child","some","includes","item","wallpaper","origin","author","getRandomPaper","subs","rand","floor","random","saveStorage","resetWallpapers","localStorage","setItem","JSON","stringify","getItem","parse","SettingsService","redditService","unsplashService","redditIsOn","setReddit","unsplashIsOn","setUnsplash","isOn","serviceArr","collections","UnsplashService","colectionOrUser","collectionOrUser","collection","getRandomItem","getRandomWallpaper","user","users","collectionsOn","usersOn","itemValue","itemType","resolutionOn","width","height","itemList","itemName","termsOn","terms"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { c as writeTask } from './index-e806d1f6.js';\nimport { createGesture } from './index-f49d994d.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  if (el.componentOnReady) {\n    await el.componentOnReady();\n  }\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export interface RedditSettings{\n    subs: Sub[];\n    sorting: string;\n    limit: number;\n}\n\nexport class Sub{\n    name: string;\n    on: boolean;\n\n    constructor(name: string){\n        this.name = name;\n        this.on = true;\n    }\n}","import { Sub } from './reddit-settings';\n\nexport class Collection extends Sub{\n\n}\n\nexport class User extends Sub{\n\n}\n\nexport class Term extends Sub{\n\n}\n\nexport class Item extends Sub{\n\n}\n\nexport interface UnsplashSettings{\n    collectionsOn?: boolean;\n    usersOn?: boolean;\n    termsOn?: boolean;\n    collections: Collection[];\n    users: User[];\n    terms: Term[];\n    resolutionOn?: boolean;\n    width?: number;\n    height?: number;\n\n\n    \n    \n    \n}","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  constructor(\n    private loadingController: LoadingController\n  ) { }\n\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: \"Please wait...\",\n      duration: 10000,\n    });\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n    console.log(\"Loading dismissed !!\");\n  }\n\n\n  async dismiss(){\n    await this.loadingController.dismiss();\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { catchError, filter, map, tap } from \"rxjs/operators\";\nimport { RedditSettings, Sub } from '../interfaces/reddit-settings';\n\nimport {\n\tChild,\n\tChildData,\n\tRedditResponse,\n} from \"../interfaces/reddit-response\";\nimport { Wallpaper } from '../interfaces/wallpaper';\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class RedditService {\n\tpublic baseUrl: string;\n\t// public subreddits: Sub[] = [];\n\tpublic settings: RedditSettings;\n\tprivate wallpapers: Wallpaper[] = [];\n\tconstructor(private http: HttpClient) {\n\t\tthis.baseUrl = \"https://www.reddit.com/r\";\n\t\tthis.loadStorage();\n\t}\n\n\tgetPicture(): Observable<Wallpaper> {\n\t\tconst sub = this.getRandomSub();\n        \n\t\tconst str = `/${sub.name}/${this.settings.sorting}.json?limit=${this.settings.limit}`;\n        \n\t\tconst conditions = [\".jpg\", \".png\", \".jpeg\"];\n\t\tif(this.wallpapers.length <= 0){\n\t\t\tconsole.log(\"RedditService -> str\", str);\n\t\t\treturn this.http.get<RedditResponse>(this.baseUrl + str).pipe(\n\t\t\t\tmap((items) => {\n\t\t\t\t\tlet arr = items.data.children.filter((child) =>\n\t\t\t\t\t\tconditions.some((el) => child.data.url.includes(el))\n\t\t\t\t\t);\n\t\n\t\t\t\t\tfor (let item of arr) {\n\t\t\t\t\t\tconst wallpaper: Wallpaper = {\n\t\t\t\t\t\t\torigin: item.data.url,\n\t\t\t\t\t\t\tauthor: item.data.author,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.wallpapers.push(wallpaper);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tconsole.log(\"RedditService -> this.wallpapers\", this.wallpapers)\n\t\t\t\t\tif ( this.wallpapers.length === 0){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (this.wallpapers.length === 1){\n\t\t\t\t\t\treturn this.wallpapers[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.getRandomPaper();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\treturn of(this.getRandomPaper());\n\t\t}\n\t\t\n\t}\n\n\tgetRandomSub(): Sub{\n\t\tconst subs = this.settings.subs.filter(item => item.on);\n\t\tconst rand = Math.floor(Math.random() * subs.length);\n\t\treturn subs[rand];\n\t}\n\n\tgetRandomPaper(): Wallpaper{\n\t\tif ( this.wallpapers.length === 0){\n\t\t\treturn;\n\t\t} else if (this.wallpapers.length === 1){\n\t\t\treturn this.wallpapers[0];\n\t\t} else {\n\t\t\treturn this.wallpapers[Math.floor(Math.random() * this.wallpapers.length)]\n\t\t}\n\t\t\n\t}\n\n\taddSub(sub: Sub){\n\t\tthis.settings.subs.push(sub);\n\t\tthis.saveStorage();\n\t\t\n\t}\n\n\tsaveStorage() {\n\t\tthis.resetWallpapers();\n\t\tlocalStorage.setItem(\"reddit-settings\", JSON.stringify(this.settings));\n\t}\n\n\tloadStorage() {\n\t\tif (localStorage.getItem(\"reddit-settings\")) {\n\t\t\tthis.settings = JSON.parse(localStorage.getItem(\"reddit-settings\"));\n\t\t} else {\n\t\t\tthis.settings = {subs:[], sorting: 'hot', limit:1};\n\t\t}\n\t}\n\n\tresetWallpapers(){\n\t\tthis.wallpapers = [];\n\t}\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { RedditService } from './reddit.service';\nimport { UnsplashService } from './unsplash.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  redditIsOn: boolean;\n\tunsplashIsOn: boolean;\n  constructor(\n\tprivate redditService: RedditService,\n\tprivate unsplashService: UnsplashService,\n  ) {\n\t\tthis.redditIsOn = JSON.parse(localStorage.getItem('redditIsOn'));\n\t\tif (this.redditIsOn === null) {\n\t\t\tthis.redditIsOn = false;\n\t\t\tthis.setReddit(false);\n\t\t}\n    \n\t\tthis.unsplashIsOn = JSON.parse(localStorage.getItem('unsplashIsOn'));\n\t\tif (this.unsplashIsOn === null) {\n\t\t\tthis.unsplashIsOn = false;\n\t\t\tthis.setUnsplash(false);\n\t\t}\n  }\n  \n  setStorage() {\n\t\tlocalStorage.setItem(\"redditIsOn\", JSON.stringify(this.redditIsOn));\n\t\tlocalStorage.setItem(\"unsplashIsOn\", JSON.stringify(this.unsplashIsOn));\n  }\n  \n  setReddit(isOn: boolean){\n    localStorage.setItem(\"redditIsOn\", JSON.stringify(isOn));\n  }\n\n  setUnsplash(isOn: boolean){\n    localStorage.setItem(\"unsplashIsOn\", JSON.stringify(isOn));\n  }\n\n\n  pickRandomService() {\n\tlet serviceArr = [];\n\tif (this.redditIsOn && this.redditService.settings.subs.length > 0) {\n\t\tserviceArr.push(this.redditService);\n\t}\n\n\tif (this.unsplashIsOn && this.unsplashService.settings.collections.length > 0) {\n\t\tserviceArr.push(this.unsplashService);\n\t}\n\tif (serviceArr.length <= 0){\n\t\treturn null;\n\t} else {\n\t\tconst rand = Math.floor(Math.random() * serviceArr.length);\n\t\treturn serviceArr[rand];\n\t}\n\n\n}\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport {\n  Collection,\n  Item,\n  Term,\n  UnsplashSettings,\n  User,\n} from \"../interfaces/unsplash-settings\";\nimport { Wallpaper } from \"../interfaces/wallpaper\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UnsplashService {\n  public baseUrl: string;\n  public settings: UnsplashSettings;\n\n  constructor() {\n    // https://source.unsplash.com/collection/190727/1080x2340\n    this.baseUrl = \"https://source.unsplash.com\";\n    this.loadStorage();\n    console.log(this.settings);\n  }\n\n  getPicture() {\n    const colectionOrUser = this.collectionOrUser();\n    if (colectionOrUser == 'collection') {\n      const collection = this.getRandomItem(this.settings.collections);\n      return this.getRandomWallpaper(collection.name, colectionOrUser);\n    } else if (colectionOrUser == 'user') {\n      const user = this.getRandomItem(this.settings.users);\n      return this.getRandomWallpaper(user.name, colectionOrUser);\n    }\n  }\n\n  collectionOrUser(): string {\n    let options = [];\n\n    if (this.settings.collectionsOn){\n      options.push('collection');\n    }\n    if (this.settings.usersOn){\n      options.push('user');\n    }\n    const rand = Math.floor(Math.random() * options.length);\n\n    return options[rand];\n  }\n\n  getRandomWallpaper(\n    itemValue: string,\n    itemType: string\n  ): Observable<Wallpaper> {\n    let url: string;\n    if (this.settings.resolutionOn) {\n      url = `/${itemType}/${itemValue}/${this.settings.width}x${this.settings.height}`;\n    } else {\n      url = `/${itemType}/${itemValue}`;\n    }\n    const wallpaper: Wallpaper = {\n      origin: this.baseUrl + url,\n      author: \"Unsplash Source\",\n    };\n    return of(wallpaper);\n  }\n\n/*   getRandomFromCollection(collectionId: string): Observable<Wallpaper> {\n    let url: string;\n    if (this.settings.resolutionOn) {\n      url = `/collection/${collectionId}/${this.settings.width}x${this.settings.height}`;\n    } else {\n      url = `/collection/${collectionId}`;\n    }\n\n    const wallpaper: Wallpaper = {\n      origin: this.baseUrl + url,\n      author: \"Unsplash Source\",\n    };\n    return of(wallpaper);\n  } */\n\n  /*   getRandomCollection(){\n    const collections = this.settings.collections.filter(item => item.on);\n\t\tconst rand = Math.floor(Math.random() * collections.length);\n\t\treturn collections[rand];\n  } */\n\n  getRandomItem<T extends Item>(itemList: T[]): T {\n    const items = itemList.filter((item) => item.on);\n    const rand = Math.floor(Math.random() * items.length);\n    return items[rand];\n  }\n\n  addItem<T extends Item>(item: T, itemList: T[]) {\n    itemList.push(item);\n  }\n\n  setOn(isOn: boolean, itemName: string) {\n    if (itemName === \"collection\") {\n      this.settings.collectionsOn = isOn;\n    } else if (itemName === \"user\") {\n      this.settings.usersOn = isOn;\n    } else if (itemName === \"term\") {\n      this.settings.termsOn = isOn;\n    }\n  }\n\n  getCollections(): Collection[] {\n    return this.settings.collections;\n  }\n\n  getUsers(): User[] {\n    return this.settings.users;\n  }\n\n  getTerms(): Term[] {\n    return this.settings.terms;\n  }\n\n  saveStorage() {\n    localStorage.setItem(\"unsplash-settings\", JSON.stringify(this.settings));\n  }\n\n  loadStorage() {\n    if (localStorage.getItem(\"unsplash-settings\")) {\n      this.settings = JSON.parse(localStorage.getItem(\"unsplash-settings\"));\n    } else {\n      this.settings = {\n        collections: [new Collection(\"1111702\")],\n        users: [],\n        terms: [],\n      };\n    }\n  }\n}\n"]}