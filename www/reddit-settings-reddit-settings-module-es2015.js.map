{"version":3,"sources":["./src/app/reddit-settings/reddit-settings.page.html","./src/app/reddit-settings/reddit-settings-routing.module.ts","./src/app/reddit-settings/reddit-settings.module.ts","./src/app/reddit-settings/reddit-settings.page.scss","./src/app/reddit-settings/reddit-settings.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,y2DAA0yD,4NAA4N,WAAW,8TAA8T,E;;;;;;;;;;;;;;;;;;;ACArzE;AACc;AAEK;AAE5D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAkB;KAC9B;CACF,CAAC;IAMW,+BAA+B,SAA/B,+BAA+B;CAAG;AAAlC,+BAA+B;IAJ3C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,+BAA+B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBH;AACM;AACF;AAEA;AAEsC;AAEvB;IAW/C,wBAAwB,SAAxB,wBAAwB;CAAG;AAA3B,wBAAwB;IATpC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,+FAA+B;SAChC;QACD,YAAY,EAAE,CAAC,wEAAkB,CAAC;KACnC,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;ACnBrC;AAAe,6GAA8C,+JAA+J,E;;;;;;;;;;;;;;;;;;;ACA1K;AACkB;AACT;IAO9C,kBAAkB,SAAlB,kBAAkB;IAI9B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAC/C,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;QACvC,OAAO,CAAC,GAAG,CACV,oDAAoD,EACpD,IAAI,CAAC,QAAQ,CACb,CAAC;QACF,IAAI,CAAC,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC;IACnC,CAAC;IAED,QAAQ,KAAI,CAAC;IAEb,MAAM;QACL,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,OAAO;SACP;QACD,MAAM,MAAM,GAAG,IAAI,+DAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAElC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,WAAW,CAAC,GAAQ;QACnB,qBAAqB;QACrB,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;aACtE,MAAM,CAAC;QACT,IAAI,UAAU,KAAK,CAAC,EAAE;YACrB,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC;SACnB;aAAM;YACN,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,KAAK,CAAC;SACpB;QAED,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IAEF,MAAM,CAAC,CAAS;QACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;CACD;;YAtDQ,sEAAa;;AAOT,kBAAkB;IAL9B,+DAAS,CAAC;QACV,QAAQ,EAAE,qBAAqB;QAC/B,+OAA0C;;KAE1C,CAAC;GACW,kBAAkB,CA+C9B;AA/C8B","file":"reddit-settings-reddit-settings-module-es2015.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n\\t<ion-toolbar>\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\t\\t\\t<ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n\\t\\t</ion-buttons>\\n\\t\\t<ion-title> Reddit Settings </ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n\\t<ion-list class=\\\"animate__animated animate__fadeInLeft animate__faster\\\">\\n\\t\\t<ion-item>\\n\\t\\t\\t<ion-label>Sorting</ion-label>\\n\\t\\t\\t<ion-select [(ngModel)]=\\\"settings.sorting\\\" placeholder=\\\"Select One\\\">\\n\\t\\t\\t  <ion-select-option value=\\\"hot\\\">Hot</ion-select-option>\\n\\t\\t\\t  <ion-select-option value=\\\"new\\\">New</ion-select-option>\\n\\t\\t\\t  <ion-select-option value=\\\"controversial\\\">Controversial</ion-select-option>\\n\\t\\t\\t  <ion-select-option value=\\\"top\\\">Top</ion-select-option>\\n\\t\\t\\t  <ion-select-option value=\\\"rising\\\">Rising</ion-select-option>\\n\\t\\t\\t  <ion-select-option value=\\\"random\\\">Random</ion-select-option>\\n\\t\\t\\t</ion-select>\\n\\t\\t  </ion-item>\\n\\t\\t<ion-item>\\n\\t\\t\\t<ion-label position=\\\"floating\\\">Limit</ion-label>\\n\\t\\t\\t<ion-input\\n\\t\\t\\t\\t[(ngModel)]=\\\"settings.limit\\\"\\n\\t\\t\\t\\ttype=\\\"number\\\"\\n\\t\\t\\t></ion-input>\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n\\t\\n\\t<ion-list class=\\\"animate__animated animate__fadeInLeft animate__faster\\\">\\n\\t\\t<ion-item>\\n\\t\\t\\t<ion-label position=\\\"floating\\\">Add subreddit</ion-label>\\n\\t\\t\\t<ion-input\\n\\t\\t\\t\\t(keyup.enter)=\\\"addSub()\\\"\\n\\t\\t\\t\\t[(ngModel)]=\\\"sub.name\\\"\\n\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t></ion-input>\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n\\t<ion-list *ngIf=\\\"settings.subs.length\\\">\\n\\t\\t<ion-list-header *ngIf=\\\"settings.subs.length\\\">\\n\\t\\t\\t<ion-label class=\\\"animate__animated animate__fadeInLeft animate__faster\\\">Subreddits</ion-label>\\n\\t\\t</ion-list-header>\\n\\t\\t<ion-item-sliding\\n\\t\\t\\tclass=\\\"animate__animated animate__fadeInDown\\\"\\n\\t\\t\\t*ngFor=\\\"let item of settings.subs; let i = index\\\"\\n\\t\\t>\\n\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t<ion-checkbox\\n\\t\\t\\t\\t\\t(ionChange)=\\\"changeCheck(item)\\\"\\n\\t\\t\\t\\t\\t[(ngModel)]=\\\"item.on\\\"\\n\\t\\t\\t\\t\\tslot=\\\"start\\\"\\n\\t\\t\\t\\t></ion-checkbox>\\n\\t\\t\\t\\t<ion-label> {{item.name}} </ion-label>\\n\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t<ion-item-options side=\\\"end\\\">\\n\\t\\t\\t\\t<ion-item-option (click)=\\\"delete(i)\\\" color=\\\"danger\\\">\\n\\t\\t\\t\\t\\t<ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n\\t\\t\\t\\t</ion-item-option>\\n\\t\\t\\t</ion-item-options>\\n\\t\\t</ion-item-sliding>\\n\\t</ion-list>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RedditSettingsPage } from './reddit-settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RedditSettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RedditSettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RedditSettingsPageRoutingModule } from './reddit-settings-routing.module';\n\nimport { RedditSettingsPage } from './reddit-settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RedditSettingsPageRoutingModule\n  ],\n  declarations: [RedditSettingsPage]\n})\nexport class RedditSettingsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZGRpdC1zZXR0aW5ncy9yZWRkaXQtc2V0dGluZ3MucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { RedditSettings, Sub } from \"../interfaces/reddit-settings\";\nimport { RedditService } from \"../services/reddit.service\";\n\n@Component({\n\tselector: \"app-reddit-settings\",\n\ttemplateUrl: \"./reddit-settings.page.html\",\n\tstyleUrls: [\"./reddit-settings.page.scss\"],\n})\nexport class RedditSettingsPage implements OnInit {\n\t// subList: Sub[];\n\tsub: Sub;\n\tsettings: RedditSettings;\n\tconstructor(private redditService: RedditService) {\n\t\tthis.settings = redditService.settings;\n\t\tconsole.log(\n\t\t\t\"RedditSettingsPage -> constructor -> this.settings\",\n\t\t\tthis.settings\n\t\t);\n\t\tthis.sub = { name: \"\", on: true };\n\t}\n\n\tngOnInit() {}\n\n\taddSub() {\n\t\tif (this.sub.name.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst newSub = new Sub(this.sub.name);\n\t\tthis.redditService.addSub(newSub);\n\n\t\tthis.sub.name = \"\";\n\t\tthis.redditService.saveStorage();\n\t}\n\n\tchangeCheck(sub: Sub) {\n\t\t// console.log(item);\n\t\tconst pendientes = this.settings.subs.filter((itemData) => !itemData.on)\n\t\t\t.length;\n\t\tif (pendientes === 0) {\n\t\t\tthis.sub.on = true;\n\t\t} else {\n\t\t\tthis.sub.on = false;\n\t\t}\n\n\t\tthis.redditService.saveStorage();\n  }\n  \n  onChange(){\n    this.redditService.saveStorage();\n  }\n\n\tdelete(i: number) {\n\t\tthis.settings.subs.splice(i, 1);\n\t\tthis.redditService.saveStorage();\n\t}\n}\n"],"sourceRoot":"webpack:///"}